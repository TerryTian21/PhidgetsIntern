package LCD;

import com.phidget22.LCD;
import com.phidget22.LCDFont;
import com.phidget22.LCDPixelState;
import com.phidget22.TemperatureSensor;
import java.math.RoundingMode;
import java.text.DecimalFormat;


import java.util.ArrayList;

//TODO: Custom Font sizing
//TODO: Display at different time and display with different sizes set

public class Main {
	
	static ArrayList<Double> temperature = new ArrayList<Double>();
	static ArrayList<Integer> pixelTemp = new ArrayList<Integer>();
	private static DecimalFormat df = new DecimalFormat("0.0");

	public static void main(String args[]) throws Exception{
		
		//Initializes Sensors
		LCD lcd = new LCD();
		lcd.open(1000);
		
		TemperatureSensor temperatureSensor = new TemperatureSensor();
		temperatureSensor.open(1000);
		
		
		//This initializes the graph axis
		
		lcd.drawLine(20, 11, 20, 55);
		lcd.drawLine(20, 55, 127, 55);
		lcd.flush();
		
		//Test generating data
		/*
		for(int i =0; i<20; i++) {
			
			temperature.add((Math.random() * (38-21) + 20));
			double pixel = 54 - 54*(double)(temperature.get(i)-20)/18;
			pixelTemp.add((int)pixel);
		}
		*/
		
		//Setting up some variables used to display graph
		int time = 1;
		int time1 = 0;
		Double temp;
		double scale;
		double maxTemp;
		double minTemp;
		
		System.out.println("Start");
		
		//Displays the graph on screen
		while(true) {
			
			lcd.drawRect(21, 11, 127, 54, true, true);
			
			//Rounds off temperature to nearest tenth
			temperature.add(temperatureSensor.getTemperature());
			
			lcd.drawRect(0, 0, 50, 10, false, false);
			lcd.drawRect(55, 0, 105, 10, false, false);
			
			if(temperature.size() > 11) {
				
				maxTemp = getMax(time1);
				minTemp = getMin(time1);
				
				//Writes Max and Min Temp
				lcd.writeText(LCDFont.DIMENSIONS_5X8, 1, 1, "Max: " + String.valueOf(df.format(maxTemp)));
				lcd.writeText(LCDFont.DIMENSIONS_5X8, 56, 1, "Min: " +String.valueOf(df.format(minTemp)));
			
				//This changes the values on the x-axis as time progresses
				for(int i =30; i<127; i+= 10){
					lcd.drawLine(i,54,i,55);
					lcd.writeText(LCDFont.DIMENSIONS_5X8, i-3, 56, Integer.toString(time));
					time++;
				}
				
				//Changes the y-axis based on the current data points (auto-scaling)
				temp = maxTemp;
				scale = ((maxTemp-minTemp)/5);

				for(int i = 11; i<=54; i+= 9) {
					lcd.drawLine(20,i,21,i);
					lcd.writeText(LCDFont.DIMENSIONS_5X8, 0, i, Double.toString(Double.valueOf(df.format(temp))));
					temp -= scale;
				}
				lcd.writeText(LCDFont.DIMENSIONS_5X8, 0, 55, df.format(minTemp));
				lcd.flush();
				
				double range = maxTemp - minTemp;
				
				//Changes the pixel location of the temp based on min and max data points
				for(int i =0; i<11; i++) {
					double pixel = 54-(temperature.get(time1 + i)-minTemp)/range*43;
					pixelTemp.add((int)Math.round(pixel));
				}
							
				//Temp 2 gives the pixel for the first time data point
				int temp2 = 20;
				
				//Graphs data
				for(int i = 0; i<11; i++) {
					
					//lcd.drawPixel(temp2, pixelTemp.get(i), LCDPixelState.ON);
					if(i >0)
						lcd.drawLine(temp2-10, pixelTemp.get(i -1), temp2, pixelTemp.get(i));
				
					temp2 += 10;
				}
				
				pixelTemp.clear();
				lcd.flush();
				
				//Changes the values on x-axis as time changes
				time1++;
				time = time1 + 1;

			}
			
			Thread.sleep(350);
		}

	}
	
	
	public static double getMax(int counter) {
		
		double max = 0;
		
		for(int i = counter; i < counter +11; i++) {
					
			if(temperature.get(i) > max)
				max = temperature.get(i);
		}
		
		return max;
		
	}
	 
	public static double getMin(int counter) {
		
		double min = temperature.get(counter);
		
		for(int i = counter; i < counter + 11; i++)
			if(temperature.get(i) < min)
				min = temperature.get(i);
		
		return min;
	}

}
